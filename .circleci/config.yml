# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
orbs:
  android: circleci/android@1.0.3
commands:
  init_parameters:
    steps:
      - run:
          name: init params
          command: ./.scripts/environmentSetup.sh  << pipeline.git.branch >>
  execute_build:
    steps:
      - run:
          name: Assemble Release build
          command: ./.scripts/executeBuild.sh
jobs:
  unit-test:
    executor:
      name: android/android-machine
      resource-class: medium
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - android/run-tests:
          test-command: ./gradlew codeCoverageReport  --stacktrace --no-daemon
      - store_artifacts:
          name: Upload coverage APP result
          path: app/build/reports/jacoco/codeCoverageReport/html
          destination: reports-app
      - store_artifacts:
          name: Upload coverage SDK result
          path: sdk/build/reports/jacoco/codeCoverageReport/html
          destination: reports-sdk
      - android/save-gradle-cache
      - android/save-build-cache
  lint-test:
    executor:
      name: android/android-machine
      resource-class: medium
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - android/run-tests:
          test-command: ./gradlew lintDebug --stacktrace
      - store_artifacts:
          name: Upload coverage APP result
          path: app/build/reports
          destination: reports-app
      - store_artifacts:
          name: Upload coverage SDK result
          path: sdk/build/reports
          destination: reports-sdk
      - android/save-gradle-cache
      - android/save-build-cache
  build:
    executor:
      name: android/android-machine
      resource-class: medium
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - init_parameters
      - execute_build
      - store_artifacts:
          name: Store SDK .aar
          path: sdk/build/outputs/aar
          destination: aar
      - persist_to_workspace:
          root: .
          paths:
            - .
  deploy:
    executor:
      name: android/android-machine
      resource-class: medium
    steps:
      - attach_workspace:
          at: .
      - init_parameters
      - run:
          name: Assemble Release build
          command: ./.scripts/executeDeploy.sh << pipeline.git.branch >>
  apk:
    working_directory: ~/code
    executor: docker-executor
#    executor:
#      name: android/android-machine
#      resource-class: medium
    steps:
#      - attach_workspace:
#          at: .
##      - init_parameters
      - checkout
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies --stacktrace
      - run:
          name: Build apk and push
          command: |
            ./gradlew assembleDebug;
            ./gradlew bundleDebug --stacktrace;
            ./gradlew packageDebug --stacktrace;
            ./gradlew appDistributionUpload --stacktrace;

      - store_artifacts:
          name: Store Bundle
          path: app/build/outputs/bundle
          destination: bundles

      - store_artifacts:
          name: Store Apk
          path: app/build/outputs/apk
          destination: apks

      - store_artifacts:
          name: Store Universal Apk
          path: app/build/outputs/universal_apk
          destination: universal_apks

executors:
  docker-executor:
    docker:
      #      - image: bitriseio/docker-android:latest
      #      - image: circleci/android@sha256:b6646fdf7457f61825526e7bfce364d8e533da6ceb1cdb98e371e94348ecc834
      - image: cimg/android:2022.03


workflows:
  realifetech_SDK:
    jobs:
#      - unit-test
#      - lint-test
#      - build:
#          filters:
#            branches:
#              only:
#                - develop
#                - /^release\/.+$/
#                - /^hotfix\/.+$/
#                - master
#      - deploy:
#          requires:
#            - build
#            - unit-test
#            - lint-test
#          filters:
#            branches:
#              only:
#                - develop
#                - /^release\/.+$/
#                - /^hotfix\/.+$/
#                - master
      - apk
#          requires:
#            - build
#            - unit-test
#            - lint-test
#          filters:
#            branches:
#              only:
#                - develop
#                - /^release\/.+$/
#                - /^hotfix\/.+$/
#                - master